name: Build

on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8
          python -m pip install -e '.[tests]'
      - name: Lint with flake8
        run: |
          flake8 osrm/
      - name: Test with pytest
        run: |
          pytest

  package:
    name: Package
    runs-on: ubuntu-latest
    needs: build
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install pypa/build
        run: >-
          python -m pip install build --user
      - name: Build wheel
        run: >-
          python -m build
      - name: Store distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

  test-publish:
    name: Publish to TestPyPI
    needs: package
    runs-on: ubuntu-latest
    environment:
      name: pypitest
      url: https://test.pypi.org/p/py-osrm-client
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
