name: Publish

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - "CODEOWNERS"
      - "**.md"
      # - ".**"

jobs:
  semver:
    name: Semantic version
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semver.outputs.new_release_published }}
      new_release_version: ${{ steps.semver.outputs.new_release_version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0
    - name: Semantic version
      id: semver
      uses: cycjimmy/semantic-release-action@v3
      with:
        dry_run: true
        semantic_version: 19.0.5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: semver
    if: ${{ needs.semver.outputs.new_release_published == 'true' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python -m pip install build --user
    - name: Patch pyproject.toml version
      run: |
        VERSION=${{ needs.semver.outputs.new_release_version }}
        sed -ie "s/^version\s*=\s*\".*\"\s*$/version = \"${VERSION}\"/g" pyproject.toml
    - name: Build wheel
      run: >-
        python -m build
    - name: Store distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  release:
    name: Semantic release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Semantic release
      uses: cycjimmy/semantic-release-action@v3
      with:
        semantic_version: 19.0.5
        extra_plugins: |
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/git@10.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish to PyPI
    needs: release
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/py-osrm-client
    permissions:
      id-token: write
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
